from datetime import datetime

from aiogram.fsm.context import FSMContext
from aiogram.types import CallbackQuery, Message

from Config.config import LINKTOBOTFORWORKER
from DB.DB_utils import add_all_to_db, request_to_db_column, delete_from_db, get_max_id_two
from Keyboards.Inline_Employee import i_kb_emp_1, i_kb_list_for_remove
from Keyboards.Reply import r_kb_2
from Utils import Bot
from Utils.State_Machine import States


async def employee(call: CallbackQuery, state: FSMContext, bot: Bot):
    data = await state.get_data()
    user_id_here = data['user_id']
    await bot.send_message(user_id_here, f'üîò –î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –Ω–∞–∑–Ω–∞—á–∏—Ç—å —Ä–∞–±–æ—Ç–Ω–∏–∫–∞ –ø—Ä–∏—à–ª–∏ –º–Ω–µ –µ–≥–æ —é–∑–µ—Ä–Ω–µ–π–º '
                                         f'(@username) –∏–ª–∏ —Å—Å—ã–ª–∫—É –Ω–∞ –µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—å (https://t.me/username)',
                           disable_web_page_preview=True)
    await state.set_state(States.get_employee)


async def get_employee(message: Message, state: FSMContext, bot: Bot):
    if message.text:
        data = message.text
        # –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å –≤ —é–∑–µ—Ä–Ω–µ–π–º –±–µ–∑ @ –∏ https://t.me/
        user_check = is_username(data)
        if user_check != 'error':
            await message.answer(f'üîò –í–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä—å —é–∑–µ—Ä–Ω–µ–π–º: @{user_check}', reply_markup=i_kb_emp_1)
            await state.update_data(user_check=user_check)
            await state.set_state(States.check_employee)
        else:
            await message.answer(
                f'üîò –ö–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞. –ü—Ä–∏—à–ª–∏ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –≤ –∫–æ—Ç–æ—Ä–æ–º —Ç–æ–ª—å–∫–æ —é–∑–µ—Ä–Ω–µ–π–º –∏–ª–∏ —Å—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å')
    else:
        await message.answer(f'üîò –ü—Ä–∏—à–ª–∏ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –≤ –∫–æ—Ç–æ—Ä–æ–º —Ç–æ–ª—å–∫–æ —é–∑–µ—Ä–Ω–µ–π–º –∏–ª–∏ —Å—Å—ã–ª–∫–∞')


def is_username(text):
    if ' ' in text:
        return 'error'
    elif 'none' in text:
        return 'error'
    elif 'None' in text:
        return 'error'
    elif '@' in text:
        srez = text[1:]  # –û–±—Ä–µ–∑–∞–µ–º –ø–µ—Ä–≤—ã–π —Å–∏–º–≤–æ–ª
        return srez
    elif 'https://t.me/' in text:
        srez = text[13:]  # –û–±—Ä–µ–∑–∞–µ–º https://t.me/
        return srez
    else:
        return 'error'


async def check_employee(call: CallbackQuery, state: FSMContext, bot: Bot):
    data = await state.get_data()
    user_id_here = data['user_id']
    user_check = data['user_check']
    button = call.data
    if button == 'yes':
        # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –Ω–µ—Ç –ª–∏ —ç—Ç–æ–≥–æ —é–∑–µ—Ä–∞ –≤ –±–∞–∑–µ
        if get_max_id_two('username', f"'{user_check}'") is not None:
            # –†–∞–±–æ—Ç–Ω–∏–∫ –µ—Å—Ç—å –≤ –±–∞–∑–µ
            await bot.send_message(user_id_here,
                                       f'üîò –û—à–∏–±–∫–∞: —Ç–≤–æ–π —Ä–∞–±–æ—Ç–Ω–∏–∫ —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ –º–æ–µ–π –±–∞–∑–µ. –ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ–≤–µ—Ä–Ω–æ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—Ç–∏—Å—å –≤ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É', reply_markup=r_kb_2)
        else:  # –†–∞–±–æ—Ç–Ω–∏–∫–∞ –Ω–µ—Ç –≤ –±–∞–∑–µ
            await bot.send_message(user_id_here, f'üîò –•–æ—Ä–æ—à–æ, –≤–Ω–æ—à—É —Ç–≤–æ–µ–≥–æ —Ä–∞–±–æ—Ç–Ω–∏–∫–∞ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö')
            # B–Ω–µ—Å—Ç–∏ –∑–∞–ø–∏—Å—å –≤ –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É
            date_time_2 = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
            list_subjects_of_DB = "username, date_of_start, reg_done, user_status, employee_of"
            list_data_of_DB = f"'{data['user_check']}', '{date_time_2}', 'yes', " \
                              f"'employee', '{user_id_here}'"
            add_all_to_db(list_subjects_of_DB, list_data_of_DB)
            await bot.send_message(user_id_here, f'üîò–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å —Ä–∞–±–æ—Ç–Ω–∏–∫—É —Å—Å—ã–ª–∫—É –¥–ª—è –≤—Ö–æ–¥–∞\n\n'
                                             f'–í–∞–∂–Ω–æ: –æ–Ω –¥–æ–ª–∂–µ–Ω –∑–∞–π—Ç–∏ –∏–º–µ–Ω–Ω–æ –ø–æ —ç—Ç–æ–π —Å—Å—ã–ª–∫–µ\n\n'
                                             f'{LINKTOBOTFORWORKER}{user_id_here}', disable_web_page_preview=True, reply_markup=r_kb_2)
    elif button == 'no':
        await bot.send_message(user_id_here, f'üîò –ü—Ä–∏—à–ª–∏ —é–∑–µ—Ä–Ω–µ–π–º —Ä–∞–±–æ—Ç–Ω–∏–∫–∞ –µ—â—ë —Ä–∞–∑')
        await state.set_state(States.get_employee)


async def remove_employee(call: CallbackQuery, state: FSMContext, bot: Bot):
    data = await state.get_data()
    user_id_here = data['user_id']
    # –ó–∞–ø—Ä–æ—Å–∏—Ç—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã–µ –æ —Ä–∞–±–æ—Ç–Ω–∏–∫–∞—Ö –¥–ª—è user_id_here
    try:
        list_of_request = "id, username, first_name, last_name, user_id"
        list_of_employees = request_to_db_column(list_of_request, 'employee_of', user_id_here)
        count_of_emp = len(list_of_employees)
        count = 0
        if count_of_emp != 0:
            await bot.send_message(user_id_here, f'üîò–í–æ—Ç —Å–ø–∏—Å–æ–∫ —Ç–≤–æ–∏—Ö —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤:\n\n')
            for emp in list_of_employees:
                count = count + 1
                await bot.send_message(user_id_here,
                                       f'–ù–æ–º–µ—Ä {count}:\n—é–∑–µ—Ä–Ω–µ–π–º: {emp[1]}, –∏–º—è: {emp[2]}, —Ñ–∞–º–∏–ª–∏—è: {emp[3]}, id: {emp[4]}')

            await bot.send_message(user_id_here,
                                   f'üîò –í—ã–±–µ—Ä–∏ —Ä–∞–±–æ—Ç–Ω–∏–∫–∞ –∑–∞–ø–∏—Å—å –∫–æ—Ç–æ—Ä–æ–≥–æ —Å–ª–µ–¥—É–µ—Ç —É–¥–∞–ª–∏—Ç—å –∏–∑ –±–∞–∑—ã –∏ –Ω–∞–∂–º–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é —Ü–∏—Ñ—Ä—É\n\n'
                                   f'', reply_markup=i_kb_list_for_remove(count_of_emp))
            await state.update_data(list_of_employees=list_of_employees)
            await state.set_state(States.confirm_remove_employee)
        else:
            await bot.send_message(user_id_here, f'üîò –†–∞–±–æ—Ç–Ω–∏–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –º–æ–µ–π –±–∞–∑–µ')

    except Exception as ex:
        await bot.send_message(user_id_here, f'üîò –†–∞–±–æ—Ç–Ω–∏–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –º–æ–µ–π –±–∞–∑–µ')


async def confirm_remove_employee(call: CallbackQuery, state: FSMContext, bot: Bot):
    button = call.data
    data = await state.get_data()
    user_id_here = data['user_id']
    list_of_employees = data['list_of_employees']
    if button == '1':
        id_here = list_of_employees[0][0]  # id —Å—Ç—Ä–æ–∫–∏ (–∏–Ω–¥–µ–∫—Å –∑–∞–ø–∏—Å–∏ –≤ —Å–ø–∏—Å–∫–µ –∏ –∏–Ω–¥–µ–∫—Å –ø–æ–ª—è –≤ —Å—Ç—Ä–æ–∫–µ)
        delete_from_db('id', id_here)
    elif button == '2':
        id_here = list_of_employees[1][0]
        delete_from_db('id', id_here)
    elif button == '3':
        id_here = list_of_employees[2][0]
        delete_from_db('id', id_here)
    elif button == '4':
        id_here = list_of_employees[3][0]
        delete_from_db('id', id_here)
    elif button == '5':
        id_here = list_of_employees[4][0]
        delete_from_db('id', id_here)

    await bot.send_message(user_id_here,
                           f'üîò –ì–æ—Ç–æ–≤–æ! –ó–∞–ø–∏—Å—å –æ —Ä–∞–±–æ—Ç–Ω–∏–∫–µ —É–¥–∞–ª–µ–Ω–∞ –∏–∑ –º–æ–µ–π –±–∞–∑—ã.\n\n–ï—Å–ª–∏ –Ω—É–∂–Ω–æ, —Ç—ã –º–æ–∂–µ—à—å –¥–æ–±–∞–≤–∏—Ç—å –¥—Ä—É–≥–æ–≥–æ —Ä–∞–±–æ—Ç–Ω–∏–∫–∞')
